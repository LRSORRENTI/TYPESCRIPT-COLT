====================
React & TypeScript
====================

Just like we saw with lodash, React also has type 
definitions, there are types that we can add 
to a React app we plan on building 

Types for react component elements, 
function component elements, class 
component types, lot's of type definitions

And usually we'll use create-react-app command 
to set up our React application

To set up a TS + React app run the following 
command: 

npx create-react-app my-appName --template typescript 

and voila, and it's the --template typescript that 
is the main flag we must include to set up the 
TS + React project

There are ways to add TS types a different way 
with command flags @types/node or @types/react-dom etc.. 

But create-react-app my-AppName --template typescript
is the go-to

==================================
CREATE REACT APP WITH TYPESCRIPT 
==================================

Okay so the default app is running after typing npm start, 
except instead of .jsx we see .tsx, b/c we're using typescript

There's also a tsconfig.json file that's already 
set up for us, the option to tweak those settings 
are still there for you in that file 

But let's focus on the src folder, there's the 
public folder as well but there's nothing that deals 
with typescript in there, it's just where the main 
index.html file is, and any assets / images 

But in the src folder we see tsx, which is just 
jsx but typescript instead of javascript

Now rmemeber with tsx generics, arrow functions 
have a syntax with a trailing comma: 

const func = <T,>(x: T): T => {
    return x;
}

===============================================================